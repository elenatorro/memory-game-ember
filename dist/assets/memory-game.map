{"version":3,"sources":["vendor/ember-cli/app-prefix.js","memory-game/adapters/application.js","memory-game/app.js","memory-game/components/app-version.js","memory-game/constants/api.js","memory-game/constants/cards.js","memory-game/constants/game-cards.js","memory-game/constants/game.js","memory-game/constants/locales.js","memory-game/constants/store.js","memory-game/helpers/pluralize.js","memory-game/helpers/singularize.js","memory-game/helpers/t.js","memory-game/index.js","memory-game/initializers/app-version.js","memory-game/initializers/array.js","memory-game/initializers/container-debug-adapter.js","memory-game/initializers/data-adapter.js","memory-game/initializers/ember-data.js","memory-game/initializers/ember-i18n.js","memory-game/initializers/export-application-global.js","memory-game/initializers/injectStore.js","memory-game/initializers/store.js","memory-game/initializers/transforms.js","memory-game/instance-initializers/ember-data.js","memory-game/instance-initializers/ember-i18n.js","memory-game/locales/en/translations.js","memory-game/locales/es/translations.js","memory-game/models/card.js","memory-game/models/game-card.js","memory-game/models/game.js","memory-game/pods/application/route.js","memory-game/pods/application/template.js","memory-game/pods/components/change-locale/component.js","memory-game/pods/components/change-locale/template.js","memory-game/pods/components/game-board/component.js","memory-game/pods/components/game-board/template.js","memory-game/pods/components/game-card/component.js","memory-game/pods/components/game-card/template.js","memory-game/pods/components/level-name/component.js","memory-game/pods/components/level-name/template.js","memory-game/pods/components/nav-sidebar/component.js","memory-game/pods/components/nav-sidebar/template.js","memory-game/pods/game/level/route.js","memory-game/pods/game/level/template.js","memory-game/pods/game/start/route.js","memory-game/pods/game/start/template.js","memory-game/pods/index/template.js","memory-game/resolver.js","memory-game/router.js","memory-game/services/ajax.js","memory-game/services/i18n.js","memory-game/transforms/object.js","memory-game/utils/i18n/compile-template.js","memory-game/utils/i18n/missing-message.js","memory-game/utils/utils.js","memory-game/utils/uuid-generator.js","vendor/ember-cli/app-suffix.js","vendor/ember-cli/app-config.js","vendor/ember-cli/app-boot.js"],"sourcesContent":["\"use strict\";\n\n/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","define('memory-game/adapters/application', ['exports', 'ember-data'], function (exports, _emberData) {\n  var JSONAPIAdapter = _emberData['default'].JSONAPIAdapter;\n  exports['default'] = JSONAPIAdapter.extend({\n    namespace: 'api'\n  });\n});","define('memory-game/app', ['exports', 'ember', 'memory-game/resolver', 'ember-load-initializers', 'memory-game/config/environment'], function (exports, _ember, _memoryGameResolver, _emberLoadInitializers, _memoryGameConfigEnvironment) {\n\n  var App = undefined;\n\n  _ember['default'].MODEL_FACTORY_INJECTIONS = true;\n\n  App = _ember['default'].Application.extend({\n    modulePrefix: _memoryGameConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _memoryGameConfigEnvironment['default'].podModulePrefix,\n    Resolver: _memoryGameResolver['default']\n  });\n\n  (0, _emberLoadInitializers['default'])(App, _memoryGameConfigEnvironment['default'].modulePrefix);\n\n  exports['default'] = App;\n});","define('memory-game/components/app-version', ['exports', 'ember-cli-app-version/components/app-version', 'memory-game/config/environment'], function (exports, _emberCliAppVersionComponentsAppVersion, _memoryGameConfigEnvironment) {\n\n  var name = _memoryGameConfigEnvironment['default'].APP.name;\n  var version = _memoryGameConfigEnvironment['default'].APP.version;\n\n  exports['default'] = _emberCliAppVersionComponentsAppVersion['default'].extend({\n    version: version,\n    name: name\n  });\n});","define('memory-game/constants/api', ['exports', 'memory-game/config/environment'], function (exports, _memoryGameConfigEnvironment) {\n  var RequestURLS = Object.freeze({\n    Cards: {\n      GetCards: Object.freeze({\n        METHOD: 'GET',\n        URL: _memoryGameConfigEnvironment['default'].apiURL + '/cards',\n        HEADERS: Object.freeze({\n          'Content-Type': 'application/json'\n        })\n      })\n    }\n  });\n\n  exports.RequestURLS = RequestURLS;\n  var ResponseStatus = Object.freeze({\n    200: 'success',\n    404: 'notFound',\n    412: 'noGame'\n  });\n  exports.ResponseStatus = ResponseStatus;\n});","define('memory-game/constants/cards', ['exports'], function (exports) {\n  var Card = Object.freeze({\n    BACK_IMAGE_NAME: 'brainstorming'\n  });\n  exports.Card = Card;\n});","define('memory-game/constants/game-cards', ['exports'], function (exports) {\n  var GameCards = Object.freeze({\n    cards: [{\n      name: 'alpaca',\n      meta: {}\n    }, {\n      name: 'anteater',\n      meta: {}\n    }, {\n      name: 'bat',\n      meta: {}\n    }, {\n      name: 'beetle',\n      meta: {}\n    }, {\n      name: 'butterfly',\n      meta: {}\n    }, {\n      name: 'camel',\n      meta: {}\n    }, {\n      name: 'cat',\n      meta: {}\n    }, {\n      name: 'chameleon',\n      meta: {}\n    }, {\n      name: 'cobra',\n      meta: {}\n    }, {\n      name: 'cow',\n      meta: {}\n    }, {\n      name: 'crab',\n      meta: {}\n    }, {\n      name: 'crocodile',\n      meta: {}\n    }, {\n      name: 'dog',\n      meta: {}\n    }, {\n      name: 'duck',\n      meta: {}\n    }, {\n      name: 'elephant',\n      meta: {}\n    }, {\n      name: 'elk',\n      meta: {}\n    }, {\n      name: 'fish',\n      meta: {}\n    }, {\n      name: 'frog',\n      meta: {}\n    }, {\n      name: 'giraffe',\n      meta: {}\n    }, {\n      name: 'hen',\n      meta: {}\n    }, {\n      name: 'hippopotamus',\n      meta: {}\n    }, {\n      name: 'kangaroo',\n      meta: {}\n    }, {\n      name: 'macaw',\n      meta: {}\n    }, {\n      name: 'monkey',\n      meta: {}\n    }, {\n      name: 'mouse',\n      meta: {}\n    }, {\n      name: 'octopus',\n      meta: {}\n    }, {\n      name: 'ostrich',\n      meta: {}\n    }, {\n      name: 'owl',\n      meta: {}\n    }, {\n      name: 'panda',\n      meta: {}\n    }, {\n      name: 'pelican',\n      meta: {}\n    }, {\n      name: 'penguin',\n      meta: {}\n    }, {\n      name: 'pig',\n      meta: {}\n    }, {\n      name: 'rabbit',\n      meta: {}\n    }, {\n      name: 'raccoon',\n      meta: {}\n    }, {\n      name: 'rhinoceros',\n      meta: {}\n    }, {\n      name: 'seaCow',\n      meta: {}\n    }, {\n      name: 'shark',\n      meta: {}\n    }, {\n      name: 'sheep',\n      meta: {}\n    }, {\n      name: 'sloth',\n      meta: {}\n    }, {\n      name: 'snake',\n      meta: {}\n    }, {\n      name: 'spider',\n      meta: {}\n    }, {\n      name: 'squirrel',\n      meta: {}\n    }, {\n      name: 'stingray',\n      meta: {}\n    }, {\n      name: 'swan',\n      meta: {}\n    }, {\n      name: 'tiger',\n      meta: {}\n    }, {\n      name: 'tortoise',\n      meta: {}\n    }, {\n      name: 'toucan',\n      meta: {}\n    }, {\n      name: 'whale',\n      meta: {}\n    }]\n  });\n  exports.GameCards = GameCards;\n});","define('memory-game/constants/game', ['exports'], function (exports) {\n  var Game = Object.freeze({\n    Level: Object.freeze({\n      easy: Object.freeze({\n        NAME: 'easy',\n        CARDS_NUMBER: 4\n      }),\n      medium: Object.freeze({\n        NAME: 'medium',\n        CARDS_NUMBER: 8\n      }),\n      difficult: Object.freeze({\n        NAME: 'difficult',\n        CARDS_NUMBER: 12\n      })\n    }),\n    LEVELS: ['easy', 'medium', 'difficult'],\n    TURN_ANIMATION_DELAY_MILISECONDS: 1000\n  });\n  exports.Game = Game;\n});","define('memory-game/constants/locales', ['exports'], function (exports) {\n  var Locales = Object.freeze({\n    EN: 'en',\n    ES: 'es'\n  });\n  exports.Locales = Locales;\n});","define('memory-game/constants/store', ['exports'], function (exports) {\n  var Model = Object.freeze({\n    CARD: 'card',\n    GAME: 'game',\n    GAME_CARD: 'gameCard'\n  });\n  exports.Model = Model;\n});","define('memory-game/helpers/pluralize', ['exports', 'ember-inflector/lib/helpers/pluralize'], function (exports, _emberInflectorLibHelpersPluralize) {\n  exports['default'] = _emberInflectorLibHelpersPluralize['default'];\n});","define('memory-game/helpers/singularize', ['exports', 'ember-inflector/lib/helpers/singularize'], function (exports, _emberInflectorLibHelpersSingularize) {\n  exports['default'] = _emberInflectorLibHelpersSingularize['default'];\n});","define('memory-game/helpers/t', ['exports', 'ember-i18n/helper'], function (exports, _emberI18nHelper) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberI18nHelper['default'];\n    }\n  });\n});","define('memory-game/index', ['exports', 'ember-uuid'], function (exports, _emberUuid) {\n  Object.defineProperty(exports, 'v4', {\n    enumerable: true,\n    get: function get() {\n      return _emberUuid.v4;\n    }\n  });\n  Object.defineProperty(exports, 'v1', {\n    enumerable: true,\n    get: function get() {\n      return _emberUuid.v1;\n    }\n  });\n  Object.defineProperty(exports, 'parse', {\n    enumerable: true,\n    get: function get() {\n      return _emberUuid.parse;\n    }\n  });\n  Object.defineProperty(exports, 'unparse', {\n    enumerable: true,\n    get: function get() {\n      return _emberUuid.unparse;\n    }\n  });\n});","define('memory-game/initializers/app-version', ['exports', 'ember-cli-app-version/initializer-factory', 'memory-game/config/environment'], function (exports, _emberCliAppVersionInitializerFactory, _memoryGameConfigEnvironment) {\n  exports['default'] = {\n    name: 'App Version',\n    initialize: (0, _emberCliAppVersionInitializerFactory['default'])(_memoryGameConfigEnvironment['default'].APP.name, _memoryGameConfigEnvironment['default'].APP.version)\n  };\n});","define('memory-game/initializers/array', ['exports'], function (exports) {\n  exports.initialize = initialize;\n\n  function initialize() /* application */{\n    // application.inject('route', 'foo', 'service:foo');\n\n    Array.prototype.sample = function () {\n      var amount = arguments.length <= 0 || arguments[0] === undefined ? 1 : arguments[0];\n\n      return this.shuffle().slice(0, amount);\n    };\n\n    Array.prototype.shuffle = function () {\n      for (var j, x, i = this.length; i; j = Math.floor(Math.random() * i), x = this[--i], this[i] = this[j], this[j] = x) {}\n      return this;\n    };\n  }\n\n  exports['default'] = {\n    name: 'array',\n    initialize: initialize\n  };\n});","define('memory-game/initializers/container-debug-adapter', ['exports', 'ember-resolver/container-debug-adapter'], function (exports, _emberResolverContainerDebugAdapter) {\n  exports['default'] = {\n    name: 'container-debug-adapter',\n\n    initialize: function initialize() {\n      var app = arguments[1] || arguments[0];\n\n      app.register('container-debug-adapter:main', _emberResolverContainerDebugAdapter['default']);\n      app.inject('container-debug-adapter:main', 'namespace', 'application:main');\n    }\n  };\n});","define('memory-game/initializers/data-adapter', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `data-adapter` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'data-adapter',\n    before: 'store',\n    initialize: _ember['default'].K\n  };\n});","define('memory-game/initializers/ember-data', ['exports', 'ember-data/setup-container', 'ember-data/-private/core'], function (exports, _emberDataSetupContainer, _emberDataPrivateCore) {\n\n  /*\n  \n    This code initializes Ember-Data onto an Ember application.\n  \n    If an Ember.js developer defines a subclass of DS.Store on their application,\n    as `App.StoreService` (or via a module system that resolves to `service:store`)\n    this code will automatically instantiate it and make it available on the\n    router.\n  \n    Additionally, after an application's controllers have been injected, they will\n    each have the store made available to them.\n  \n    For example, imagine an Ember.js application with the following classes:\n  \n    App.StoreService = DS.Store.extend({\n      adapter: 'custom'\n    });\n  \n    App.PostsController = Ember.ArrayController.extend({\n      // ...\n    });\n  \n    When the application is initialized, `App.ApplicationStore` will automatically be\n    instantiated, and the instance of `App.PostsController` will have its `store`\n    property set to that instance.\n  \n    Note that this code will only be run if the `ember-application` package is\n    loaded. If Ember Data is being used in an environment other than a\n    typical application (e.g., node.js where only `ember-runtime` is available),\n    this code will be ignored.\n  */\n\n  exports['default'] = {\n    name: 'ember-data',\n    initialize: _emberDataSetupContainer['default']\n  };\n});","define('memory-game/initializers/ember-i18n', ['exports', 'ember-i18n/initializers/ember-i18n'], function (exports, _emberI18nInitializersEmberI18n) {\n  exports['default'] = _emberI18nInitializersEmberI18n['default'];\n});","define('memory-game/initializers/export-application-global', ['exports', 'ember', 'memory-game/config/environment'], function (exports, _ember, _memoryGameConfigEnvironment) {\n  exports.initialize = initialize;\n\n  function initialize() {\n    var application = arguments[1] || arguments[0];\n    if (_memoryGameConfigEnvironment['default'].exportApplicationGlobal !== false) {\n      var theGlobal;\n      if (typeof window !== 'undefined') {\n        theGlobal = window;\n      } else if (typeof global !== 'undefined') {\n        theGlobal = global;\n      } else if (typeof self !== 'undefined') {\n        theGlobal = self;\n      } else {\n        // no reasonable global, just bail\n        return;\n      }\n\n      var value = _memoryGameConfigEnvironment['default'].exportApplicationGlobal;\n      var globalName;\n\n      if (typeof value === 'string') {\n        globalName = value;\n      } else {\n        globalName = _ember['default'].String.classify(_memoryGameConfigEnvironment['default'].modulePrefix);\n      }\n\n      if (!theGlobal[globalName]) {\n        theGlobal[globalName] = application;\n\n        application.reopen({\n          willDestroy: function willDestroy() {\n            this._super.apply(this, arguments);\n            delete theGlobal[globalName];\n          }\n        });\n      }\n    }\n  }\n\n  exports['default'] = {\n    name: 'export-application-global',\n\n    initialize: initialize\n  };\n});","define('memory-game/initializers/injectStore', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `injectStore` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'injectStore',\n    before: 'store',\n    initialize: _ember['default'].K\n  };\n});","define('memory-game/initializers/store', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `store` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'store',\n    after: 'ember-data',\n    initialize: _ember['default'].K\n  };\n});","define('memory-game/initializers/transforms', ['exports', 'ember'], function (exports, _ember) {\n\n  /*\n    This initializer is here to keep backwards compatibility with code depending\n    on the `transforms` initializer (before Ember Data was an addon).\n  \n    Should be removed for Ember Data 3.x\n  */\n\n  exports['default'] = {\n    name: 'transforms',\n    before: 'store',\n    initialize: _ember['default'].K\n  };\n});","define(\"memory-game/instance-initializers/ember-data\", [\"exports\", \"ember-data/-private/instance-initializers/initialize-store-service\"], function (exports, _emberDataPrivateInstanceInitializersInitializeStoreService) {\n  exports[\"default\"] = {\n    name: \"ember-data\",\n    initialize: _emberDataPrivateInstanceInitializersInitializeStoreService[\"default\"]\n  };\n});","define('memory-game/instance-initializers/ember-i18n', ['exports', 'ember-i18n/instance-initializers/ember-i18n'], function (exports, _emberI18nInstanceInitializersEmberI18n) {\n  exports['default'] = _emberI18nInstanceInitializersEmberI18n['default'];\n});","define('memory-game/locales/en/translations', ['exports'], function (exports) {\n  exports['default'] = {\n    application: {\n      title: 'Memory Game'\n    },\n    index: {\n      template: {\n        startGame: 'Start Game'\n      }\n    },\n    game: {\n      start: {\n        template: {\n          level: 'Level',\n          selectLevel: 'Select Level'\n        }\n      },\n      level: {\n        template: {\n          level: 'Level',\n          playAgain: 'Play again',\n          goBack: 'Go back',\n          finishAndGoBack: 'Finish and go back',\n          wellDoneYouWon: 'Well done! You won!',\n          clickOnTheCards: 'Click on the cards to flip them'\n        }\n      }\n    },\n\n    components: {\n      navSidebar: {\n        template: {\n          menu: 'Menu'\n        }\n      },\n      changeLocale: {\n        template: {\n          EN: 'Inglés',\n          ES: 'Spanish'\n        }\n      },\n      gameCard: {\n        template: {\n          cards: {\n            alpaca: \"alpaca\",\n            anteater: \"anteater\",\n            bat: \"bat\",\n            beetle: \"beetle\",\n            butterfly: \"butterfly\",\n            camel: \"camel\",\n            cat: \"cat\",\n            chameleon: \"chameleon\",\n            cobra: \"cobra\",\n            cow: \"cow\",\n            crab: \"crab\",\n            crocodile: \"crocodile\",\n            dog: \"dog\",\n            duck: \"duck\",\n            elephant: \"elephant\",\n            elk: \"elk\",\n            fish: \"fish\",\n            frog: \"frog\",\n            giraffe: \"giraffe\",\n            hen: \"hen\",\n            hippopotamus: \"hippopotamus\",\n            kangaroo: \"kangaroo\",\n            macaw: \"macaw\",\n            monkey: \"monkey\",\n            mouse: \"mouse\",\n            octopus: \"octopus\",\n            ostrich: \"ostrich\",\n            owl: \"owl\",\n            panda: \"panda\",\n            pelican: \"pelican\",\n            penguin: \"penguin\",\n            pig: \"pig\",\n            rabbit: \"rabbit\",\n            raccoon: \"raccoon\",\n            rhinoceros: \"rhinoceros\",\n            seaCow: \"sea-cow\",\n            shark: \"shark\",\n            sheep: \"sheep\",\n            sloth: \"sloth\",\n            snake: \"snake\",\n            spider: \"spider\",\n            squirrel: \"squirrel\",\n            stingray: \"stingray\",\n            swan: \"swan\",\n            tiger: \"tiger\",\n            tortoise: \"tortoise\",\n            toucan: \"toucan\",\n            whale: \"whale\"\n          }\n        }\n      },\n      levelName: {\n        template: {\n          easy: 'Easy',\n          medium: 'Medium',\n          difficult: 'Difficult'\n        }\n      }\n    }\n  };\n});","define('memory-game/locales/es/translations', ['exports'], function (exports) {\n  exports['default'] = {\n    application: {\n      title: 'Juego de Memoria'\n    },\n    index: {\n      template: {\n        startGame: 'Empezar'\n      }\n    },\n    game: {\n      start: {\n        template: {\n          level: 'Nivel',\n          selectLevel: 'Selecciona Nivel'\n        }\n      },\n      level: {\n        template: {\n          level: 'Nivel',\n          playAgain: 'Jugar otra vez',\n          goBack: 'Volver atrás',\n          finishAndGoBack: 'Terminar y volver atrás',\n          wellDoneYouWon: '!Muy bien! ¡Has ganado!',\n          clickOnTheCards: 'Haz click en las cartas para girarlas'\n        }\n      }\n    },\n    components: {\n      navSidebar: {\n        template: {\n          menu: 'Menú'\n        }\n      },\n      changeLocale: {\n        template: {\n          EN: 'English',\n          ES: 'Español'\n        }\n      },\n      gameCard: {\n        template: {\n          cards: {\n            alpaca: \"alpaca\",\n            anteater: \"oso hormiguero\",\n            bat: \"murciélago\",\n            beetle: \"escarabajo\",\n            butterfly: \"mariposa\",\n            camel: \"camello\",\n            cat: \"gato\",\n            chameleon: \"camaleón\",\n            cobra: \"cobra\",\n            cow: \"vaca\",\n            crab: \"cangrejo\",\n            crocodile: \"cocodrilo\",\n            dog: \"perro\",\n            duck: \"pato\",\n            elephant: \"elefante\",\n            elk: \"alce\",\n            fish: \"pez\",\n            frog: \"rana\",\n            giraffe: \"jirafa\",\n            hen: \"gallina\",\n            hippopotamus: \"hipopótamo\",\n            kangaroo: \"canguro\",\n            macaw: \"guacamayo\",\n            monkey: \"mono\",\n            mouse: \"ratón\",\n            octopus: \"pulpo\",\n            ostrich: \"avestruz\",\n            owl: \"búho\",\n            panda: \"panda\",\n            pelican: \"pelícano\",\n            penguin: \"pingüino\",\n            pig: \"cerdo\",\n            rabbit: \"conejo\",\n            raccoon: \"mapache\",\n            rhinoceros: \"rinoceronte\",\n            seaCow: \"manatí\",\n            shark: \"tiburón\",\n            sheep: \"oveja\",\n            sloth: \"perezoso\",\n            snake: \"serpiente\",\n            spider: \"araña\",\n            squirrel: \"ardilla\",\n            stingray: \"mantarraya\",\n            swan: \"cisne\",\n            tiger: \"tigre\",\n            tortoise: \"tortuga\",\n            toucan: \"tucán\",\n            whale: \"ballena\"\n          }\n        }\n      },\n      levelName: {\n        template: {\n          easy: 'Fácil',\n          medium: 'Medio',\n          difficult: 'Difícil'\n        }\n      }\n    }\n  };\n});","define('memory-game/models/card', ['exports', 'ember-data'], function (exports, _emberData) {\n  var attr = _emberData['default'].attr;\n  var Model = _emberData['default'].Model;\n  exports['default'] = Model.extend({\n    name: attr('string'),\n    meta: attr('object')\n  });\n});","define('memory-game/models/game-card', ['exports', 'ember-data', 'memory-game/models/card'], function (exports, _emberData, _memoryGameModelsCard) {\n  var attr = _emberData['default'].attr;\n  var belongsTo = _emberData['default'].belongsTo;\n  exports['default'] = _memoryGameModelsCard['default'].extend({\n    game: belongsTo('game'),\n    isTurned: attr('boolean'),\n    isPaired: attr('boolean')\n  });\n});","define('memory-game/models/game', ['exports', 'ember', 'ember-data', 'memory-game/constants/game'], function (exports, _ember, _emberData, _memoryGameConstantsGame) {\n  var attr = _emberData['default'].attr;\n  var hasMany = _emberData['default'].hasMany;\n  var Model = _emberData['default'].Model;\n  var computed = _ember['default'].computed;\n  exports['default'] = Model.extend({\n    level: attr('string'),\n    isLocked: attr('boolean'),\n    gameCards: hasMany('game-card'),\n\n    isFinished: computed('gameCards.@each.isPaired', {\n      get: function get() {\n        return this.get('gameCards').isEvery('isPaired', true);\n      }\n    }),\n\n    spawnCards: function spawnCards() {\n      var _this = this;\n\n      var cardsNumber = _memoryGameConstantsGame.Game.Level[this.get('level')].CARDS_NUMBER;\n\n      var cards = this.store.peekAll('card').toArray().sample(cardsNumber / 2);\n\n      var gameCards = cards.concat(cards).shuffle().map(function (card) {\n        return _this.store.createRecord('gameCard', {\n          game: _this,\n          name: card.get('name'),\n          meta: card.get('meta')\n        });\n      });\n      this.set('gameCards', gameCards);\n    }\n\n  });\n});","define('memory-game/pods/application/route', ['exports', 'ember'], function (exports, _ember) {\n  var Route = _ember['default'].Route;\n  exports['default'] = Route.extend({\n    beforeModel: function beforeModel() {\n      return this.store.findAll('card');\n    },\n\n    actions: {\n      goToIndex: function goToIndex() {\n        this.transitionTo('index');\n      }\n    }\n  });\n});","define(\"memory-game/pods/application/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 9,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"memory-game/pods/application/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"memory-game\");\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"container\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var morphs = new Array(2);\n        morphs[0] = dom.createMorphAt(element0, 1, 1);\n        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);\n        return morphs;\n      },\n      statements: [[\"inline\", \"nav-sidebar\", [], [\"on-go-to-index\", \"goToIndex\"], [\"loc\", [null, [3, 2], [3, 44]]], 0, 0], [\"content\", \"outlet\", [\"loc\", [null, [6, 4], [6, 14]]], 0, 0, 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('memory-game/pods/components/change-locale/component', ['exports', 'ember', 'memory-game/constants/locales'], function (exports, _ember, _memoryGameConstantsLocales) {\n  exports['default'] = _ember['default'].Component.extend({\n    i18nService: _ember['default'].inject.service('i18n'),\n    tagName: 'ul',\n\n    actions: {\n      changeTo: function changeTo(locale) {\n        if (!!_memoryGameConstantsLocales.Locales[locale]) {\n          this.set('i18nService.locale', locale);\n        }\n      }\n    }\n  });\n});","define(\"memory-game/pods/components/change-locale/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 7,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"memory-game/pods/components/change-locale/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"li\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2, \"href\", \"#\");\n        dom.setAttribute(el2, \"class\", \"btn btn-small waves-effect waves-light purple darken-2 mg-level-button\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createElement(\"li\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2, \"href\", \"#\");\n        dom.setAttribute(el2, \"class\", \"btn btn-small waves-effect waves-light purple darken-2 mg-level-button\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var element1 = dom.childAt(fragment, [2, 1]);\n        var morphs = new Array(4);\n        morphs[0] = dom.createElementMorph(element0);\n        morphs[1] = dom.createMorphAt(element0, 0, 0);\n        morphs[2] = dom.createElementMorph(element1);\n        morphs[3] = dom.createMorphAt(element1, 0, 0);\n        return morphs;\n      },\n      statements: [[\"element\", \"action\", [\"changeTo\", \"EN\"], [], [\"loc\", [null, [2, 93], [2, 119]]], 0, 0], [\"inline\", \"t\", [\"components.changeLocale.template.EN\"], [], [\"loc\", [null, [2, 120], [2, 163]]], 0, 0], [\"element\", \"action\", [\"changeTo\", \"ES\"], [], [\"loc\", [null, [5, 93], [5, 119]]], 0, 0], [\"inline\", \"t\", [\"components.changeLocale.template.ES\"], [], [\"loc\", [null, [5, 120], [5, 163]]], 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('memory-game/pods/components/game-board/component', ['exports', 'ember', 'memory-game/constants/game'], function (exports, _ember, _memoryGameConstantsGame) {\n  var Component = _ember['default'].Component;\n  var later = _ember['default'].run.later;\n  exports['default'] = Component.extend({\n    classNames: ['mg-game'],\n    tagName: 'div',\n\n    // Model\n    game: null,\n    turnedCard: null,\n\n    actions: {\n      cardHasBeenTurned: function cardHasBeenTurned(card) {\n        var turnedCard;\n\n        turnedCard = this.get('turnedCard');\n        if (!!turnedCard) {\n          this.set('game.isLocked', true);\n          _checkPairAndResetGame.call(this, card, turnedCard);\n        } else {\n          this.set('turnedCard', card);\n        }\n      }\n    }\n  });\n\n  /* Private */\n  function _checkPairAndResetGame(card1, card2) {\n    _setPairedCardsIfIsPair.call(this, card1, card2);\n    _resetGame.call(this, card1, card2);\n  }\n\n  function _setPairedCardsIfIsPair(card1, card2) {\n    return _isPair.call(this, card1, card2) ? _pairCards.call(this, card1, card2) : _turnCards.call(this, card1, card2);\n  }\n\n  function _isPair(card1, card2) {\n    return card1.get('name') === card2.get('name');\n  }\n\n  function _resetGame() {\n    this.set('turnedCard', null);\n    this.set('game.isLocked', false);\n  }\n\n  function _pairCards(card1, card2) {\n    card1.toggleProperty('isPaired');\n    card2.toggleProperty('isPaired');\n  }\n\n  function _turnCards(card1, card2) {\n    later(this, function () {\n      card1.set('isTurned', false);\n      card2.set('isTurned', false);\n    }, _memoryGameConstantsGame.Game.TURN_ANIMATION_DELAY_MILISECONDS);\n  }\n});","define(\"memory-game/pods/components/game-board/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.2\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 1,\n              \"column\": 0\n            },\n            \"end\": {\n              \"line\": 3,\n              \"column\": 0\n            }\n          },\n          \"moduleName\": \"memory-game/pods/components/game-board/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"  \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 1, 1, contextualElement);\n          return morphs;\n        },\n        statements: [[\"inline\", \"game-card\", [], [\"card\", [\"subexpr\", \"@mut\", [[\"get\", \"card\", [\"loc\", [null, [2, 19], [2, 23]]], 0, 0, 0, 0]], [], [], 0, 0], \"on-card-is-turned\", \"cardHasBeenTurned\", \"isGameLocked\", [\"subexpr\", \"@mut\", [[\"get\", \"game.isLocked\", [\"loc\", [null, [2, 75], [2, 88]]], 0, 0, 0, 0]], [], [], 0, 0]], [\"loc\", [null, [2, 2], [2, 90]]], 0, 0]],\n        locals: [\"card\"],\n        templates: []\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 4,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"memory-game/pods/components/game-board/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        dom.insertBoundary(fragment, null);\n        return morphs;\n      },\n      statements: [[\"block\", \"each\", [[\"get\", \"game.gameCards\", [\"loc\", [null, [1, 8], [1, 22]]], 0, 0, 0, 0]], [], 0, null, [\"loc\", [null, [1, 0], [3, 9]]]]],\n      locals: [],\n      templates: [child0]\n    };\n  })());\n});","define('memory-game/pods/components/game-card/component', ['exports', 'ember', 'memory-game/constants/cards', 'memory-game/constants/game', 'memory-game/config/environment'], function (exports, _ember, _memoryGameConstantsCards, _memoryGameConstantsGame, _memoryGameConfigEnvironment) {\n  var Component = _ember['default'].Component;\n  var computed = _ember['default'].computed;\n  var equal = _ember['default'].computed.equal;\n  exports['default'] = Component.extend({\n    classNameBindings: ['isEasy:mg-game-card-flip-container-easy', 'isMedium:mg-game-card-flip-container-medium', 'isDifficult:mg-game-card-flip-container-difficult'],\n    classNames: ['mg-game-card-flip-container'],\n    tagName: 'div',\n\n    // Model\n    card: null,\n    isGameLocked: null,\n\n    isSelectable: computed('card.isPaired', 'card.isTurned', 'isGameLocked', function () {\n      return !(this.get('card.isTurned') || this.get('card.isPaired') || this.get('isGameLocked'));\n    }),\n\n    isEasy: equal('card.game.level', _memoryGameConstantsGame.Game.Level.easy.NAME),\n    isMedium: equal('card.game.level', _memoryGameConstantsGame.Game.Level.medium.NAME),\n    isDifficult: equal('card.game.level', _memoryGameConstantsGame.Game.Level.difficult.NAME),\n\n    cardNameLocale: computed('card.name', function () {\n      return 'components.gameCard.template.cards.' + this.get('card.name');\n    }),\n\n    cardFrontImageURL: computed('card', function () {\n      return _memoryGameConfigEnvironment['default'].rootURL + 'assets/images/' + this.get('card.name') + '.png';\n    }),\n\n    cardBackImageURL: computed('card', function () {\n      return _memoryGameConfigEnvironment['default'].rootURL + 'assets/images/' + _memoryGameConstantsCards.Card.BACK_IMAGE_NAME + '.png';\n    }),\n\n    actions: {\n      selectCard: function selectCard() {\n        if (this.get('isSelectable')) {\n          this.toggleProperty('card.isTurned');\n          this.sendAction('on-card-is-turned', this.get('card'));\n        }\n      }\n    }\n  });\n});","define(\"memory-game/pods/components/game-card/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 19,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"memory-game/pods/components/game-card/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"mg-game-card waves-dark hoverable mg-game-card-back\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3, \"class\", \"mg-game-card-image\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"img\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3, \"class\", \"mg-game-card-text\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"mg-game-card waves-light hoverable mg-game-card-reverse mg-game-card-front\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3, \"class\", \"mg-game-card-image\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"img\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3, \"class\", \"mg-game-card-text\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createElement(\"p\");\n        var el5 = dom.createComment(\"\");\n        dom.appendChild(el4, el5);\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element1, [1, 1]);\n        var element3 = dom.childAt(element0, [3]);\n        var element4 = dom.childAt(element3, [1, 1]);\n        var morphs = new Array(6);\n        morphs[0] = dom.createAttrMorph(element0, 'class');\n        morphs[1] = dom.createElementMorph(element0);\n        morphs[2] = dom.createAttrMorph(element2, 'src');\n        morphs[3] = dom.createMorphAt(dom.childAt(element1, [3, 1]), 0, 0);\n        morphs[4] = dom.createAttrMorph(element4, 'src');\n        morphs[5] = dom.createMorphAt(dom.childAt(element3, [3, 1]), 0, 0);\n        return morphs;\n      },\n      statements: [[\"attribute\", \"class\", [\"concat\", [\"mg-game-card-flipper \", [\"subexpr\", \"if\", [[\"get\", \"card.isTurned\", [\"loc\", [null, [1, 38], [1, 51]]], 0, 0, 0, 0], \"turned\"], [], [\"loc\", [null, [1, 33], [1, 62]]], 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], [\"element\", \"action\", [\"selectCard\"], [], [\"loc\", [null, [1, 64], [1, 87]]], 0, 0], [\"attribute\", \"src\", [\"concat\", [[\"get\", \"cardFrontImageURL\", [\"loc\", [null, [4, 18], [4, 35]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], [\"inline\", \"t\", [[\"get\", \"cardNameLocale\", [\"loc\", [null, [7, 13], [7, 27]]], 0, 0, 0, 0]], [], [\"loc\", [null, [7, 9], [7, 29]]], 0, 0], [\"attribute\", \"src\", [\"concat\", [[\"get\", \"cardBackImageURL\", [\"loc\", [null, [12, 18], [12, 34]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], [\"inline\", \"t\", [\"application.title\"], [], [\"loc\", [null, [15, 9], [15, 34]]], 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('memory-game/pods/components/level-name/component', ['exports', 'ember'], function (exports, _ember) {\n  var Component = _ember['default'].Component;\n  var computed = _ember['default'].computed;\n  exports['default'] = Component.extend({\n    tagName: 'span',\n\n    // Model\n    name: null,\n    locales: {},\n\n    levelNameLocale: computed('name', function () {\n      return 'components.levelName.template.' + this.get('name');\n    })\n  });\n});","define(\"memory-game/pods/components/level-name/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 2,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"memory-game/pods/components/level-name/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var morphs = new Array(1);\n        morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n        dom.insertBoundary(fragment, 0);\n        return morphs;\n      },\n      statements: [[\"inline\", \"t\", [[\"get\", \"levelNameLocale\", [\"loc\", [null, [1, 4], [1, 19]]], 0, 0, 0, 0]], [], [\"loc\", [null, [1, 0], [1, 21]]], 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('memory-game/pods/components/nav-sidebar/component', ['exports', 'ember', 'memory-game/config/environment'], function (exports, _ember, _memoryGameConfigEnvironment) {\n  var Component = _ember['default'].Component;\n  exports['default'] = Component.extend({\n    classNames: ['mg-nav-sidebar', 'deep-orange', 'accent-3'],\n    tagName: 'nav',\n\n    logoImage: _memoryGameConfigEnvironment['default'].rootURL + 'assets/images/brainstorming.png',\n\n    actions: {\n      goToIndex: function goToIndex() {\n        this.sendAction('on-go-to-index');\n      }\n    }\n  });\n});","define(\"memory-game/pods/components/nav-sidebar/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 8,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"memory-game/pods/components/nav-sidebar/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"nav-wrapper container\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"a\");\n        dom.setAttribute(el2, \"id\", \"logo-container\");\n        dom.setAttribute(el2, \"href\", \"#\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"img\");\n        dom.setAttribute(el3, \"alt\", \"Memory game logo\");\n        dom.setAttribute(el3, \"class\", \"responsive-img mg-image-small\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element1, [1]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createElementMorph(element1);\n        morphs[1] = dom.createAttrMorph(element2, 'src');\n        morphs[2] = dom.createMorphAt(element0, 3, 3);\n        return morphs;\n      },\n      statements: [[\"element\", \"action\", [\"goToIndex\"], [], [\"loc\", [null, [2, 34], [2, 56]]], 0, 0], [\"attribute\", \"src\", [\"concat\", [[\"get\", \"logoImage\", [\"loc\", [null, [3, 77], [3, 86]]], 0, 0, 0, 0]], 0, 0, 0, 0, 0], 0, 0, 0, 0], [\"inline\", \"change-locale\", [], [\"class\", \"right\"], [\"loc\", [null, [6, 2], [6, 33]]], 0, 0]],\n      locals: [],\n      templates: []\n    };\n  })());\n});","define('memory-game/pods/game/level/route', ['exports', 'ember'], function (exports, _ember) {\n  var Route = _ember['default'].Route;\n  exports['default'] = Route.extend({\n\n    model: function model(params) {\n\n      var game = this.store.createRecord('game', {\n        level: params.level_name\n      });\n\n      game.spawnCards();\n\n      return game;\n    },\n\n    afterModel: function afterModel(model) {\n      if (!model.get('gameCards.length')) {\n        this.transitionTo('game.start');\n      }\n    },\n\n    actions: {\n      goBack: function goBack() {\n        this.transitionTo('game.start');\n      }\n    }\n  });\n});","define(\"memory-game/pods/game/level/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.2\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 8,\n              \"column\": 2\n            },\n            \"end\": {\n              \"line\": 10,\n              \"column\": 2\n            }\n          },\n          \"moduleName\": \"memory-game/pods/game/level/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          dom.setAttribute(el1, \"class\", \"mg-game-board-finished-message deep-orange-text\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);\n          return morphs;\n        },\n        statements: [[\"inline\", \"t\", [\"game.level.template.wellDoneYouWon\"], [], [\"loc\", [null, [9, 63], [9, 105]]], 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })();\n    var child1 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.2\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 10,\n              \"column\": 2\n            },\n            \"end\": {\n              \"line\": 12,\n              \"column\": 2\n            }\n          },\n          \"moduleName\": \"memory-game/pods/game/level/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"    \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"p\");\n          dom.setAttribute(el1, \"class\", \"mg-game-board-finished-message deep-orange-text\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(dom.childAt(fragment, [1]), 0, 0);\n          return morphs;\n        },\n        statements: [[\"inline\", \"t\", [\"game.level.template.clickOnTheCards\"], [], [\"loc\", [null, [11, 63], [11, 106]]], 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 18,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"memory-game/pods/game/level/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"section center\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"h1\");\n        dom.setAttribute(el2, \"class\", \"header center deep-orange-text mg-title\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\": \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"row center\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createComment(\"\");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"button\");\n        dom.setAttribute(el2, \"class\", \"btn-large waves-effect waves-light purple darken-2 mg-level-button\");\n        var el3 = dom.createComment(\"\");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0]);\n        var element1 = dom.childAt(element0, [1]);\n        var element2 = dom.childAt(element0, [7]);\n        var morphs = new Array(7);\n        morphs[0] = dom.createMorphAt(element1, 0, 0);\n        morphs[1] = dom.createMorphAt(element1, 2, 2);\n        morphs[2] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);\n        morphs[3] = dom.createMorphAt(element0, 5, 5);\n        morphs[4] = dom.createElementMorph(element2);\n        morphs[5] = dom.createMorphAt(element2, 0, 0);\n        morphs[6] = dom.createMorphAt(fragment, 2, 2, contextualElement);\n        return morphs;\n      },\n      statements: [[\"inline\", \"t\", [\"game.level.template.level\"], [], [\"loc\", [null, [2, 54], [2, 87]]], 0, 0], [\"inline\", \"level-name\", [], [\"name\", [\"subexpr\", \"@mut\", [[\"get\", \"model.level\", [\"loc\", [null, [2, 107], [2, 118]]], 0, 0, 0, 0]], [], [], 0, 0]], [\"loc\", [null, [2, 89], [2, 120]]], 0, 0], [\"inline\", \"game-board\", [], [\"game\", [\"subexpr\", \"@mut\", [[\"get\", \"model\", [\"loc\", [null, [5, 22], [5, 27]]], 0, 0, 0, 0]], [], [], 0, 0]], [\"loc\", [null, [5, 4], [5, 29]]], 0, 0], [\"block\", \"if\", [[\"get\", \"model.isFinished\", [\"loc\", [null, [8, 8], [8, 24]]], 0, 0, 0, 0]], [], 0, 1, [\"loc\", [null, [8, 2], [12, 9]]]], [\"element\", \"action\", [\"goBack\"], [], [\"loc\", [null, [14, 85], [14, 104]]], 0, 0], [\"inline\", \"t\", [\"game.level.template.finishAndGoBack\"], [], [\"loc\", [null, [14, 105], [14, 148]]], 0, 0], [\"content\", \"outlet\", [\"loc\", [null, [17, 0], [17, 10]]], 0, 0, 0, 0]],\n      locals: [],\n      templates: [child0, child1]\n    };\n  })());\n});","define('memory-game/pods/game/start/route', ['exports', 'ember', 'memory-game/constants/game'], function (exports, _ember, _memoryGameConstantsGame) {\n  var Route = _ember['default'].Route;\n  exports['default'] = Route.extend({\n\n    model: function model() {\n      return {\n        levels: _memoryGameConstantsGame.Game.LEVELS\n      };\n    },\n\n    actions: {\n      goToLevel: function goToLevel(levelName) {\n        if (!!_memoryGameConstantsGame.Game.Level[levelName]) {\n          this.transitionTo('game.level', levelName);\n        }\n      }\n    }\n  });\n});","define(\"memory-game/pods/game/start/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.2\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 6,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 8,\n              \"column\": 6\n            }\n          },\n          \"moduleName\": \"memory-game/pods/game/start/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 1,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createTextNode(\"        \");\n          dom.appendChild(el0, el1);\n          var el1 = dom.createElement(\"button\");\n          dom.setAttribute(el1, \"class\", \"btn-large waves-effect waves-light purple darken-2 mg-level-button\");\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createTextNode(\": \");\n          dom.appendChild(el1, el2);\n          var el2 = dom.createComment(\"\");\n          dom.appendChild(el1, el2);\n          dom.appendChild(el0, el1);\n          var el1 = dom.createTextNode(\"\\n\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var element0 = dom.childAt(fragment, [1]);\n          var morphs = new Array(3);\n          morphs[0] = dom.createElementMorph(element0);\n          morphs[1] = dom.createMorphAt(element0, 0, 0);\n          morphs[2] = dom.createMorphAt(element0, 2, 2);\n          return morphs;\n        },\n        statements: [[\"element\", \"action\", [\"goToLevel\", [\"get\", \"level\", [\"loc\", [null, [7, 112], [7, 117]]], 0, 0, 0, 0]], [], [\"loc\", [null, [7, 91], [7, 119]]], 0, 0], [\"inline\", \"t\", [\"game.start.template.level\"], [], [\"loc\", [null, [7, 120], [7, 153]]], 0, 0], [\"inline\", \"level-name\", [], [\"name\", [\"subexpr\", \"@mut\", [[\"get\", \"level\", [\"loc\", [null, [7, 173], [7, 178]]], 0, 0, 0, 0]], [], [], 0, 0]], [\"loc\", [null, [7, 155], [7, 180]]], 0, 0]],\n        locals: [\"level\"],\n        templates: []\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 14,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"memory-game/pods/game/start/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"section no-pad-bot\");\n        dom.setAttribute(el1, \"id\", \"index-banner\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"container\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        dom.setAttribute(el3, \"class\", \"header center deep-orange-text mg-title\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3, \"class\", \"row center mg-button-group\");\n        var el4 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element1 = dom.childAt(fragment, [0, 1]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(dom.childAt(element1, [1]), 0, 0);\n        morphs[1] = dom.createMorphAt(dom.childAt(element1, [3]), 1, 1);\n        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);\n        return morphs;\n      },\n      statements: [[\"inline\", \"t\", [\"game.start.template.selectLevel\"], [], [\"loc\", [null, [3, 56], [3, 95]]], 0, 0], [\"block\", \"each\", [[\"get\", \"model.levels\", [\"loc\", [null, [6, 14], [6, 26]]], 0, 0, 0, 0]], [], 0, null, [\"loc\", [null, [6, 6], [8, 15]]]], [\"content\", \"outlet\", [\"loc\", [null, [13, 0], [13, 10]]], 0, 0, 0, 0]],\n      locals: [],\n      templates: [child0]\n    };\n  })());\n});","define(\"memory-game/pods/index/template\", [\"exports\"], function (exports) {\n  exports[\"default\"] = Ember.HTMLBars.template((function () {\n    var child0 = (function () {\n      return {\n        meta: {\n          \"revision\": \"Ember@2.8.2\",\n          \"loc\": {\n            \"source\": null,\n            \"start\": {\n              \"line\": 5,\n              \"column\": 6\n            },\n            \"end\": {\n              \"line\": 5,\n              \"column\": 162\n            }\n          },\n          \"moduleName\": \"memory-game/pods/index/template.hbs\"\n        },\n        isEmpty: false,\n        arity: 0,\n        cachedFragment: null,\n        hasRendered: false,\n        buildFragment: function buildFragment(dom) {\n          var el0 = dom.createDocumentFragment();\n          var el1 = dom.createComment(\"\");\n          dom.appendChild(el0, el1);\n          return el0;\n        },\n        buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n          var morphs = new Array(1);\n          morphs[0] = dom.createMorphAt(fragment, 0, 0, contextualElement);\n          dom.insertBoundary(fragment, 0);\n          dom.insertBoundary(fragment, null);\n          return morphs;\n        },\n        statements: [[\"inline\", \"t\", [\"index.template.startGame\"], [], [\"loc\", [null, [5, 130], [5, 162]]], 0, 0]],\n        locals: [],\n        templates: []\n      };\n    })();\n    return {\n      meta: {\n        \"revision\": \"Ember@2.8.2\",\n        \"loc\": {\n          \"source\": null,\n          \"start\": {\n            \"line\": 1,\n            \"column\": 0\n          },\n          \"end\": {\n            \"line\": 11,\n            \"column\": 0\n          }\n        },\n        \"moduleName\": \"memory-game/pods/index/template.hbs\"\n      },\n      isEmpty: false,\n      arity: 0,\n      cachedFragment: null,\n      hasRendered: false,\n      buildFragment: function buildFragment(dom) {\n        var el0 = dom.createDocumentFragment();\n        var el1 = dom.createElement(\"div\");\n        dom.setAttribute(el1, \"class\", \"section no-pad-bot\");\n        dom.setAttribute(el1, \"id\", \"index-banner\");\n        var el2 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el1, el2);\n        var el2 = dom.createElement(\"div\");\n        dom.setAttribute(el2, \"class\", \"container\");\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"h1\");\n        dom.setAttribute(el3, \"class\", \"header center deep-orange-text mg-title mg-main-title\");\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el2, el3);\n        var el3 = dom.createElement(\"div\");\n        dom.setAttribute(el3, \"class\", \"row center mg-button-group\");\n        var el4 = dom.createTextNode(\"\\n      \");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createComment(\"\");\n        dom.appendChild(el3, el4);\n        var el4 = dom.createTextNode(\"\\n    \");\n        dom.appendChild(el3, el4);\n        dom.appendChild(el2, el3);\n        var el3 = dom.createTextNode(\"\\n  \");\n        dom.appendChild(el2, el3);\n        dom.appendChild(el1, el2);\n        var el2 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el1, el2);\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\\n\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createComment(\"\");\n        dom.appendChild(el0, el1);\n        var el1 = dom.createTextNode(\"\\n\");\n        dom.appendChild(el0, el1);\n        return el0;\n      },\n      buildRenderNodes: function buildRenderNodes(dom, fragment, contextualElement) {\n        var element0 = dom.childAt(fragment, [0, 1]);\n        var morphs = new Array(3);\n        morphs[0] = dom.createMorphAt(dom.childAt(element0, [1]), 0, 0);\n        morphs[1] = dom.createMorphAt(dom.childAt(element0, [3]), 1, 1);\n        morphs[2] = dom.createMorphAt(fragment, 2, 2, contextualElement);\n        return morphs;\n      },\n      statements: [[\"inline\", \"t\", [\"application.title\"], [], [\"loc\", [null, [3, 70], [3, 95]]], 0, 0], [\"block\", \"link-to\", [\"game.start\"], [\"id\", \"start-game-button\", \"class\", \"btn-large waves-effect waves-light purple darken-2\", \"tagName\", \"button\"], 0, null, [\"loc\", [null, [5, 6], [5, 174]]]], [\"content\", \"outlet\", [\"loc\", [null, [10, 0], [10, 10]]], 0, 0, 0, 0]],\n      locals: [],\n      templates: [child0]\n    };\n  })());\n});","define('memory-game/resolver', ['exports', 'ember-resolver'], function (exports, _emberResolver) {\n  exports['default'] = _emberResolver['default'];\n});","define('memory-game/router', ['exports', 'ember', 'memory-game/config/environment'], function (exports, _ember, _memoryGameConfigEnvironment) {\n\n  var Router = _ember['default'].Router.extend({\n    location: _memoryGameConfigEnvironment['default'].locationType,\n    rootURL: _memoryGameConfigEnvironment['default'].rootURL,\n\n    onDidTransition: _ember['default'].on('didTransition', function () {\n      this.set('currentRoute', arguments[0]);\n    })\n  });\n\n  Router.map(function () {\n    this.route('index', { path: '/' });\n\n    this.route('game', function () {\n      this.route('start');\n      this.route('level', { path: '/level/:level_name' });\n    });\n  });\n\n  exports['default'] = Router;\n});","define('memory-game/services/ajax', ['exports', 'ember-ajax/services/ajax'], function (exports, _emberAjaxServicesAjax) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberAjaxServicesAjax['default'];\n    }\n  });\n});","define('memory-game/services/i18n', ['exports', 'ember-i18n/services/i18n'], function (exports, _emberI18nServicesI18n) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberI18nServicesI18n['default'];\n    }\n  });\n});","define('memory-game/transforms/object', ['exports', 'ember', 'ember-data'], function (exports, _ember, _emberData) {\n  var isNone = _ember['default'].isNone;\n  var Transform = _emberData['default'].Transform;\n  exports['default'] = Transform.extend({\n\n    deserialize: function deserialize(serialized) {\n      if (isNone(serialized)) {\n        return {};\n      } else {\n        return serialized;\n      }\n    },\n\n    serialize: function serialize(deserialized) {\n      if (isNone(deserialized)) {\n        return {};\n      } else {\n        return deserialized;\n      }\n    }\n\n  });\n});","define('memory-game/utils/i18n/compile-template', ['exports', 'ember-i18n/utils/i18n/compile-template'], function (exports, _emberI18nUtilsI18nCompileTemplate) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberI18nUtilsI18nCompileTemplate['default'];\n    }\n  });\n});","define('memory-game/utils/i18n/missing-message', ['exports', 'ember-i18n/utils/i18n/missing-message'], function (exports, _emberI18nUtilsI18nMissingMessage) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberI18nUtilsI18nMissingMessage['default'];\n    }\n  });\n});","define(\"memory-game/utils/utils\", [\"exports\"], function (exports) {\n  var Utils = {\n    array: [],\n\n    setArray: function setArray(array) {\n      this.array = array.toArray();\n      return this;\n    },\n\n    getArray: function getArray() {\n      return this.array;\n    },\n\n    getNElement: function getNElement(n) {\n      var i, array, resultArray;\n\n      i = 0;\n      array = this.array;\n      resultArray = [];\n\n      for (i; i < n; i++) {\n        resultArray.push(array[i]);\n      }\n\n      this.array = resultArray;\n      return this;\n    },\n\n    shuffleArray: function shuffleArray() {\n      var array, i, j, arrayLength, currentElement;\n      array = this.array;\n\n      arrayLength = array.length;\n\n      for (i = arrayLength; i; i--) {\n        j = Math.floor(Math.random() * i);\n        currentElement = array[i - 1];\n        array[i - 1] = array[j];\n        array[j] = currentElement;\n      }\n\n      this.array = array;\n      return this;\n    }\n  };\n  exports.Utils = Utils;\n});","define('memory-game/utils/uuid-generator', ['exports', 'ember-uuid/utils/uuid-generator'], function (exports, _emberUuidUtilsUuidGenerator) {\n  Object.defineProperty(exports, 'default', {\n    enumerable: true,\n    get: function get() {\n      return _emberUuidUtilsUuidGenerator['default'];\n    }\n  });\n  Object.defineProperty(exports, 'v4', {\n    enumerable: true,\n    get: function get() {\n      return _emberUuidUtilsUuidGenerator.v4;\n    }\n  });\n  Object.defineProperty(exports, 'v1', {\n    enumerable: true,\n    get: function get() {\n      return _emberUuidUtilsUuidGenerator.v1;\n    }\n  });\n  Object.defineProperty(exports, 'parse', {\n    enumerable: true,\n    get: function get() {\n      return _emberUuidUtilsUuidGenerator.parse;\n    }\n  });\n  Object.defineProperty(exports, 'unparse', {\n    enumerable: true,\n    get: function get() {\n      return _emberUuidUtilsUuidGenerator.unparse;\n    }\n  });\n});","/* jshint ignore:start */\n\n\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\ndefine('memory-game/config/environment', ['ember'], function(Ember) {\n  var prefix = 'memory-game';\n/* jshint ignore:start */\n\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n/* jshint ignore:end */\n\n});\n\n/* jshint ignore:end */\n","/* jshint ignore:start */\n\nif (!runningTests) {\n  require(\"memory-game/app\")[\"default\"].create({\"name\":\"memory-game\",\"version\":\"0.0.0+820d03f7\"});\n}\n\n/* jshint ignore:end */\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnpJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;;ACDA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxBA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrCA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbvtGA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjhLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjlHA;AACA;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC7CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC9BA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;","file":"memory-game.js"}